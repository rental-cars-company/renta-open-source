from typing import Optional

from api.bookings.models import Booking
from api.users.models import User
from common.document_service.verification_services.send_to_telegram import (
    send_to_telegram,
)


def create(
    user: User,
    rental_summary: dict,
    validated_serializer_data: dict,
    # do_verify: bool = True,
) -> Booking:
    """–°–æ–∑–¥–∞—ë–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ."""
    # —É–±–∏—Ä–∞–µ–º –ø–æ–ª–µ –¥–æ—Å—Ç–∞–≤–∫–∏, –µ—Å–ª–∏ –ø—Ä–∏—à–ª–æ –ª–∏—à–Ω–µ–µ
    validated_serializer_data.pop("delivery_price", None)
    booking = Booking(
        user=user,
        **rental_summary,
        **validated_serializer_data,
    )
    booking.save()

    send_to_telegram(f"üéâ Booking {booking.id} —Å–æ–∑–¥–∞–Ω –¥–ª—è user {user.id}")

    # if do_verify:
    #     verify_dl_debts_task.delay(booking.user.id)
    #     send_to_telegram(f"üîç –ó–∞–ø—É—â–µ–Ω–∞ verify_dl_debts_task –¥–ª—è user {user.id}")

    return booking


def change_status(
    booking: Booking,
    new_status: str,
    user_to_notify: Optional[User] = None,
) -> None:
    """–ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ ‚Äî –∞ –¥–∞–ª—å–Ω–µ–π—à–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ signals.py.
    """
    old_status = booking.status
    booking.status = new_status
    booking.save(update_fields=["status"])

    send_to_telegram(
        f"üîÑ change_status: booking={booking.id}, {old_status} ‚Üí {new_status}"
    )

    if user_to_notify is None:
        send_to_telegram(
            "‚ö†Ô∏è user_to_notify=None, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω—ã —Å–∏–≥–Ω–∞–ª–∞–º–∏"
        )
    else:
        send_to_telegram(f"üë§ user_to_notify={user_to_notify.id}")
