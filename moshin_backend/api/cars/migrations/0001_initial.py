# Generated by Django 5.2 on 2025-04-30 15:58

import api.cars.validators
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CarFleet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="uuid",
                    ),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=128, verbose_name="Название компании"
                    ),
                ),
                (
                    "owner_phone_number",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона неверного формата. Он должен начинаться с +998",
                                regex="^\\+998(9[0-1]|9[3-5]|9[7-9]|33|55|77|88)[0-9]{7}$",
                            )
                        ],
                        verbose_name="Номер телефона (+998)",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="locations.location",
                        verbose_name="Пункт выдачи (location)",
                    ),
                ),
            ],
            options={
                "verbose_name": "автопарк",
                "verbose_name_plural": "Автопарки",
                "ordering": ["-updated_time"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cars",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="uuid",
                    ),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                (
                    "car_class",
                    models.CharField(
                        choices=[
                            ("standard", "Стандарт"),
                            ("premium", "Премиум"),
                        ],
                        default="standard",
                        max_length=20,
                        verbose_name="Класс авто (стандарт/премиум)",
                    ),
                ),
                (
                    "brand",
                    models.CharField(max_length=100, verbose_name="Марка"),
                ),
                (
                    "model",
                    models.CharField(max_length=100, verbose_name="Модель"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ],
                        verbose_name="Цена за час",
                    ),
                ),
                (
                    "is_automatic",
                    models.BooleanField(verbose_name="Автоматическая коробка"),
                ),
                (
                    "engine_type",
                    models.CharField(
                        choices=[
                            ("electric", "Электрическая"),
                            ("gasoline", "Бензиновая"),
                            ("hybrid", "Гибридная"),
                        ],
                        default="gasoline",
                        max_length=20,
                        verbose_name="Тип двигателя",
                    ),
                ),
                (
                    "year",
                    models.PositiveSmallIntegerField(
                        validators=[api.cars.validators.validate_year_value],
                        verbose_name="Год выпуска",
                    ),
                ),
                (
                    "license_plate",
                    models.CharField(
                        max_length=20, verbose_name="Регистрационный номер"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("white", "Белый"),
                            ("black", "Чёрный"),
                            ("silver", "Серебристый"),
                            ("gray", "Серый"),
                            ("blue", "Синий"),
                            ("red", "Красный"),
                            ("green", "Зелёный"),
                            ("yellow", "Жёлтый"),
                            ("brown", "Коричневый"),
                            ("orange", "Оранжевый"),
                            ("beige", "Бежевый"),
                            ("gold", "Золотистый"),
                            ("purple", "Фиолетовый"),
                            ("other", "Другой"),
                        ],
                        max_length=20,
                        verbose_name="Цвет",
                    ),
                ),
                (
                    "required_age",
                    models.PositiveSmallIntegerField(
                        default=18, verbose_name="Минимальный возраст водителя"
                    ),
                ),
                ("available_from", models.TimeField(verbose_name="Доступен с")),
                ("available_to", models.TimeField(verbose_name="Доступен до")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Добавлено"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Изменено"
                    ),
                ),
                (
                    "android_auto",
                    models.BooleanField(
                        default=False, verbose_name="Android Auto"
                    ),
                ),
                (
                    "apple_car_play",
                    models.BooleanField(
                        default=False, verbose_name="Apple CarPlay"
                    ),
                ),
                (
                    "child_seat",
                    models.BooleanField(
                        default=False, verbose_name="Детское кресло"
                    ),
                ),
                (
                    "bluetooth",
                    models.BooleanField(
                        default=False, verbose_name="Bluetooth"
                    ),
                ),
                ("aux", models.BooleanField(default=False, verbose_name="AUX")),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание"
                    ),
                ),
                (
                    "car_type",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Тип кузова (sedan, suv и т.д.)",
                    ),
                ),
                (
                    "supports_delivery",
                    models.BooleanField(
                        default=False, verbose_name="Поддерживает доставку"
                    ),
                ),
                (
                    "supports_pickup",
                    models.BooleanField(
                        default=True, verbose_name="Поддерживает самовывоз"
                    ),
                ),
                (
                    "seats",
                    models.SmallIntegerField(
                        verbose_name="Количество посадочных мест"
                    ),
                ),
                (
                    "has_conditioner",
                    models.BooleanField(verbose_name="Имеет кондиционер"),
                ),
                (
                    "fleet",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cars",
                        to="cars.carfleet",
                        verbose_name="Автопарк",
                    ),
                ),
            ],
            options={
                "verbose_name": "машину",
                "verbose_name_plural": "Машины",
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CarImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="uuid",
                    ),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                ("image", models.ImageField(upload_to="car_images/")),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="cars.cars",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_time"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FavoriteCars",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="uuid",
                    ),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to="cars.cars",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_time"],
                "abstract": False,
            },
        ),
    ]
